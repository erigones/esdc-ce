- set_fact:
    pdnsconfd_user: pdns-confd
    pdnsconfd_group: pdns-confd
    pdnsconfd_home: /opt/pdns-confd
    pdns_group: pdns
    pdns_recursor_group: pdns-recursor
    pdnsconfd_shell: /usr/bin/false
    pdnsconfd_repo: "https://github.com/erigones/pgconfgen.git"

# don't do anything if /opt/local upgrade is going to fail
- name: Check free space
  shell: /opt/local/bin/df -m /opt | /opt/local/bin/tail -1 | /opt/local/bin/awk '{print $4}'
  register: free_space_mb

- name: Fail if there's too little space for upgrade
  fail:
    msg: "No diskspace for upgrade (needed: 1500MB+; current: {{ free_space_mb.stdout }}MB). Please increase disk size for VM '{{ inventory_hostname }}' in 'admin' datacenter"
  when: free_space_mb.stdout | int < 2000

- name: Update /var/zoneinit/includes/41-dns.sh
  copy: src="{{ current_task_dir }}/files/41-dns.sh" dest=/var/zoneinit/includes/41-dns.sh owner=root group=root mode=0755

- name: Create pdns-confd group
  group: #gid={{ pdnsconfd_gid }}
         name={{ pdnsconfd_group }}
         state=present

- name: Create pdns-confd user
  user: #uid={{ pdnsconfd_uid }}
        name={{ pdnsconfd_user }}
        group={{ pdnsconfd_group }}
        groups="{{ pdns_group }},{{ pdns_recursor_group }}"
        home={{ pdnsconfd_home }}
        shell={{ pdnsconfd_shell }}
        profile="Primary Administrator"
        createhome=no
        state=present

- name: Disable pdns services
  service: 
    name: '{{ item }}'
    state: stopped
    enabled: no
  with_items:
      - pdns
      - pdns-recursor
      - zabbix-agent

- name: Upgrade /opt/local
  include: "{{ upg_base }}/lib/upgrade_opt_local.yml"

- name: Clone pdns-confd source code repository
  git: repo={{ pdnsconfd_repo }}
       dest={{ pdnsconfd_home }}
       version=master
       accept_hostkey=yes

- name: Create python virtualenv
  pip:
    chdir: "{{ pdnsconfd_home }}"
    virtualenv: "{{ pdnsconfd_home }}/envs"
    requirements: "{{ pdnsconfd_home }}/requirements.txt"
  vars:
    ansible_python_interpreter: /opt/local/bin/python3

- name: Import pdns-confd SMF manifest
  command: /usr/sbin/svccfg import /opt/local/lib/svc/manifest/pdns-confd.xml

# will be enabled by zoneinit script
- name: Ensure pdns-confd is disabled
  service: name=pdns-confd enabled=no state=stopped

- name: Update new config files and start services
  shell: "{{ item }}"
  with_items:
      - /var/zoneinit/includes/41-dns.sh
      - /var/zoneinit/includes/21-zabbix.sh

