#!/bin/bash

set -e

if [[ "$(id -u)" != "0" ]]; then
	echo "This script must be run as root" >&2
	exit 6
fi

# ensure ansible is installed
if ! [ -x /usr/bin/ansible-playbook ]; then
	echo "Installing ansible package"
	yum -y -q install ansible
fi

MAINDIR="$(cd "$(dirname "$0")/.." ; pwd -P)"
ERIGONES_HOME="${ERIGONES_HOME:-"${MAINDIR}"}"
ANS_BASE="${ERIGONES_HOME}/ans"
UPG_BASE="${ERIGONES_HOME}/ans/upgrade"
export ERIGONES_HOME UPG_BASE

PYTHONPATH="${ERIGONES_HOME}:${PYTHONPATH}:${ERIGONES_HOME}/envs/lib/python2.7/site-packages"
VIRTUAL_ENV="${ERIGONES_HOME}/envs"
export PYTHONPATH VIRTUAL_ENV

# Update ansible inventory
"${ERIGONES_HOME}"/bin/ctl.sh genhosts --vms > "${ANS_BASE}/hosts.cfg"

# pre-v2.3.1 check
if [[ ! -f "/root/.ssh/id_rsa" ]]; then
	echo "Generating SSH key pair for this server"
	ssh-keygen -t rsa -b 2048 -f /root/.ssh/id_rsa -q -P ""
	cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
	echo
	echo "*********  !!! WARNING !!!  **********"
	echo "Please copy manually the public key /root/.ssh/id_rsa.pub from this server"
	echo "to other servers (mon01, img01, dns01, cfg01) and press ENTER to continue."
	echo "*********  !!! WARNING !!!  **********"
	read -r
fi

cd "${ANS_BASE}"
/usr/bin/ansible-playbook "${UPG_BASE}/lib/runupgrade.yml" --extra-vars="runhosts='mgmt*' appliance_type=mgmt"
/usr/bin/ansible-playbook "${UPG_BASE}/lib/runupgrade.yml" --extra-vars="runhosts='mon*' appliance_type=mon"
/usr/bin/ansible-playbook "${UPG_BASE}/lib/runupgrade.yml" --extra-vars="runhosts='dns*' appliance_type=dns"
/usr/bin/ansible-playbook "${UPG_BASE}/lib/runupgrade.yml" --extra-vars="runhosts='cfgdb*' appliance_type=cfgdb"
/usr/bin/ansible-playbook "${UPG_BASE}/lib/runupgrade.yml" --extra-vars="runhosts='img*' appliance_type=img"
